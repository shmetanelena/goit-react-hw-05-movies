{"version":3,"file":"static/js/859.01300883.chunk.js","mappings":"uMAgCA,EA7BkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACGF,EAAOG,OAAS,IACf,wBACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,SACGK,KAFID,Y,sHCWrB,EAlBa,WACX,OAAiCK,EAAAA,EAAAA,UAAS,IAA1C,eAAOC,EAAP,KAAkBC,EAAlB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,cAEGC,MAAK,SAAAC,GAAI,OAAIJ,EAAYI,MACzBC,MAAMC,QAAQC,OAChB,KAGD,gCACE,4CACA,SAACC,EAAA,EAAD,CAAWpB,OAAQW,S,yECdnBU,EAAS,CAAEC,I,QAAKC,K,SAEhBC,EAAU,mCACVC,EAAW,+BAQXC,EAAW,mCAAG,+FACZC,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,EACTM,KAAM,IAHU,SAKKC,IAAAA,IAAA,UAAaN,EAAb,+BAA4CE,IALjD,cAKZK,EALY,OAMZhB,EAAOgB,EAAShB,KANJ,kBAOXA,EAAKiB,SAPM,2CAAH,qDAUXC,EAAW,mCAAG,WAAMC,GAAN,kFACZR,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,EACTM,KAAM,EACNK,MAAOA,IAJS,SAMKJ,IAAAA,IAAA,UAAaN,EAAb,yBAAsCE,IAN3C,cAMZK,EANY,OAOZhB,EAAOgB,EAAShB,KAPJ,kBAQXA,EAAKiB,SARM,2CAAH,sDAWXG,EAAQ,mCAAG,WAAM/B,GAAN,kFACTsB,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,IAFI,SAIQO,IAAAA,IAAA,UAAaN,EAAb,kBAA+BpB,EAA/B,YAAqCsB,IAJ7C,cAITK,EAJS,OAKThB,EAAOgB,EAAShB,KALP,kBAMRA,GANQ,2CAAH,sDASRqB,EAAY,mCAAG,WAAMhC,GAAN,kFACbsB,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,IAFQ,SAIIO,IAAAA,IAAA,UAAaN,EAAb,kBAA+BpB,EAA/B,oBAA6CsB,IAJjD,cAIbK,EAJa,OAKbhB,EAAOgB,EAAShB,KALH,kBAMZA,EAAKsB,MANO,2CAAH,sDASZC,EAAe,mCAAG,WAAMlC,GAAN,kFAChBsB,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,IAFW,SAICO,IAAAA,IAAA,UAAaN,EAAb,kBAA+BpB,EAA/B,oBAA6CsB,IAJ9C,cAIhBK,EAJgB,OAKhBhB,EAAOgB,EAAShB,KALA,kBAMfA,EAAKiB,SANU,2CAAH,sDASfnB,EAAM,CACVY,YAAAA,EACAQ,YAAAA,EACAE,SAAAA,EACAI,YAzDkB,SAACC,EAAMC,GACzB,IAAMC,EAAOD,EAAQ,MAAQ,OAC7B,OAAOD,EAAI,UAJW,6BAIX,YAAyBE,GAAzB,OAAgCF,GAASpB,EAAOsB,IAwD3DN,aAAAA,EACAE,gBAAAA,GAGF,O","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/tmdb.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <main>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport api from 'services/tmdb';\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [trendings, setTredings] = useState([]);\n\n  useEffect(() => {\n    api\n      .getTrending()\n      .then(data => setTredings(data))\n      .catch(console.log);\n  }, []);\n\n  return (\n    <section>\n      <h2>Trending today</h2>\n      <MovieList movies={trendings} />\n    </section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport w92 from '../images/w92.jpg';\nimport w154 from '../images/w154.jpg';\nconst images = { w92, w154 };\n\nconst API_KEY = 'c1c0e09e2b2780ccf5e67712da2ef6c9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p';\n\nconst getImageUrl = (path, small) => {\n  const size = small ? 'w92' : 'w342';\n  return path ? `${IMAGES_BASE_URL}/${size}${path}` : images[size];\n};\n\nconst getTrending = async () => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    page: 1,\n  });\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${params}`);\n  const data = response.data;\n  return data.results;\n};\n\nconst searchMovie = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    page: 1,\n    query: query,\n  });\n  const response = await axios.get(`${BASE_URL}/search/movie?${params}`);\n  const data = response.data;\n  return data.results;\n};\n\nconst getMovie = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}?${params}`);\n  const data = response.data;\n  return data;\n};\n\nconst getMovieCast = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits?${params}`);\n  const data = response.data;\n  return data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?${params}`);\n  const data = response.data;\n  return data.results;\n};\n\nconst api = {\n  getTrending,\n  searchMovie,\n  getMovie,\n  getImageUrl,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["movies","location","useLocation","length","map","id","title","to","state","from","useState","trendings","setTredings","useEffect","api","then","data","catch","console","log","MovieList","images","w92","w154","API_KEY","BASE_URL","getTrending","params","URLSearchParams","api_key","page","axios","response","results","searchMovie","query","getMovie","getMovieCast","cast","getMovieReviews","getImageUrl","path","small","size"],"sourceRoot":""}
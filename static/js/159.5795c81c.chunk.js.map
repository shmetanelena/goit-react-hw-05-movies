{"version":3,"file":"static/js/159.5795c81c.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx","services/tmdb.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"8\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n      key: PropTypes.string,\n      state: PropTypes.any,\n    }),\n  ]).isRequired,\n  children: PropTypes.any,\n};\n\nexport default BackLink;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport api from 'services/tmdb';\nimport BackLink from 'components/BackLink';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    api.getMovie(movieId).then(setMovie).catch(console.error);\n  }, [movieId]);\n\n  return (\n    <main>\n      {movie && (\n        <>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <div>\n            <img src={api.getImageUrl(movie.poster_path)} alt=\"\" />\n            <h2>{movie.title}</h2>\n            <p>User Score: ${movie.vote_average}</p>\n            <h5>Overview</h5>\n            <p>${movie.overview}</p>\n            <h5>Genres</h5>\n            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            <hr />\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <hr />\n            <Suspense fallback={<div>Loading page...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport w92 from '../images/w92.jpg';\nimport w154 from '../images/w154.jpg';\nconst images = { w92, w154 };\n\nconst API_KEY = 'c1c0e09e2b2780ccf5e67712da2ef6c9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p';\n\nconst getImageUrl = (path, small) => {\n  const size = small ? 'w92' : 'w154';\n  return path ? `${IMAGES_BASE_URL}/${size}${path}` : images[size];\n};\n\nconst getTrending = async () => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    page: 1,\n  });\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${params}`);\n  const data = response.data;\n  return data.results;\n};\n\nconst searchMovie = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    page: 1,\n    query: query,\n  });\n  const response = await axios.get(`${BASE_URL}/search/movie?${params}`);\n  const data = response.data;\n  return data.results;\n};\n\nconst getMovie = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}?${params}`);\n  const data = response.data;\n  return data;\n};\n\nconst getMovieCast = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits?${params}`);\n  const data = response.data;\n  return data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?${params}`);\n  const data = response.data;\n  return data.results;\n};\n\nconst api = {\n  getTrending,\n  searchMovie,\n  getMovie,\n  getImageUrl,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["StyledLink","styled","Link","to","children","size","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","api","then","catch","console","error","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","images","w92","w154","API_KEY","BASE_URL","getTrending","params","URLSearchParams","api_key","page","axios","response","data","results","searchMovie","query","getMovie","id","getMovieCast","cast","getMovieReviews","getImageUrl","path","small"],"sourceRoot":""}